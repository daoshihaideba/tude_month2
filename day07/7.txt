前情回顾

1. tcp粘包
   发的快 收的慢

2. tcp协议
   首部

3. HTTP协议
   请求 ： 请求行   请求类型（GET）  请求内容  协议版本
          请求头
          空行
          请求体

   响应 :  响应行   协议版本   响应码   附加信息
          响应头   Content-Type
          空行
          响应体   数据内容

  《图解HTTP》

4. httpserver


cookie：
I/O : input  output   输入输出 --》 数据传输

e.g. :   文件读写    读 输入   写 输出
         网络传输    recv  输入   send 输出


cookie : windows 或者  macos系统进程

if __name__ == "__main__":
    process = mp.Process(target=func)
    process.start() # 启动进程 --》 自动执行绑定函数
    process.join()

随堂修改：
process_3程序基础上修改，执行后，当所有子进程都结束以后，
立即打印“所有子进程执行完毕”

改写process_3,实现相同的功能，要求只能定义一个进程函数


练习 1 ： 完成大文件拆分
将一个大文件拆分两个较小的文件，要求拆分的过程使用两个子进程同时执行，
以提高拆分速度。
文件拆分按照字节大小划分为上下两个部分
在拆分完成后打印一句 “拆分完毕”

提示 ： os.path.getsize()


练习2：
编写一个程序，用来复制一个文件夹(自选文件夹，文件夹中有若干个
普通文件，没有子目录)，要求为了提高复制的速度，每个文件的复制
都采用一个独立的进程来完成

提示 ： os.listdir()
       os.mkdir("dir")

今日内容：
1. 多任务编程   多任务编程意义
2. 进程概念
3. 创建进程   理解现象


作业： 1. 进程理解   进程函数和类熟悉
      2. 将练习2尝试改写为使用类完成

